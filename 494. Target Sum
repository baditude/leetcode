class Solution {
public:
    unordered_map <string,int> mp;
    int findTargetSumWays(vector<int>& nums, int target) 
    {
        return targetsum(0,target,nums);
    }
    
    int targetsum(int ci,int target,vector <int> nums)
    {
        if(ci == nums.size() && target == 0)
            return 1;
        if(ci >= nums.size())
            return 0;
        
        string currkey = to_string(ci)+"_"+to_string(target);
        if(mp.find(currkey)!=mp.end()) return mp[currkey];
        
        int plus = targetsum(ci+1,target-nums[ci],nums);
        int min = targetsum(ci+1,target+nums[ci],nums);
        
       mp[currkey] = plus + min;
        return plus + min;
    }
};
